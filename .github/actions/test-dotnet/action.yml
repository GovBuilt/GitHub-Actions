name: Run .NET tests
description: >
  Runs .NET unit and UI tests (with the Lombiq UI Testing Toolbox for Orchard Core:
  https://github.com/Lombiq/UI-Testing-Toolbox), generates a test report and uploads UI testing failure dumps to
  artifacts.

inputs:
  build-directory:
    required: false
    default: .
    description: Path to the directory where a solution file can be found and thus the .NET build has run.
  test-verbosity:
    required: false
    default: quiet
    description: Verbosity parameter for dotnet test.
  test-filter:
    required: false
    description: >
      Filter expression for dotnet test. See: https://learn.microsoft.com/en-us/dotnet/core/testing/selective-unit-tests.
  ui-test-parallelism:
    required: false
    default: "-1"
    description: >
      Determines how many UI tests will run in parallel. Affects both xUnit's maxParallelThreads configuration and the
      MaxParallelTests configuration of Lombiq UI Testing Toolbox. If set to "-1" then the configuration coming from the
      code won't be overridden.

runs:
  using: "composite"
  steps:
    - name: Setup Scripts
      shell: pwsh
      run: |
        "${{ github.action_path }}" >> $Env:GITHUB_PATH
        (Resolve-Path "${{ github.action_path }}/../../../Scripts").Path >> $Env:GITHUB_PATH

    - name: Setup & Set UI Test Parallelization
      id: setup
      shell: pwsh
      run: |
        Set-Output "friendly-build-directory-name" "${{ inputs.build-directory }}".Replace("/", "__")
        Set-Output "runner-suffix" "${{ runner.os }}-${{ runner.arch }}-${{ runner.name }}"
        
        if (${{ inputs.ui-test-parallelism }} -eq -1)
        {
            Write-Output "The UI test parallelism configuration isn't overridden."
            Exit 0
        }

        "Lombiq_Tests_UI__OrchardCoreUITestExecutorConfiguration__MaxParallelTests=${{ inputs.ui-test-parallelism }}" >> $Env:GITHUB_ENV

        Set-XUnitMaxParallelThreads -MaxParallelThreads ${{ inputs.ui-test-parallelism }}

    - name: Run Tests
      shell: pwsh
      working-directory: ${{ inputs.build-directory }}
      run: Invoke-SolutionTests -Verbosity ${{ inputs.test-verbosity }} -Filter "${{ inputs.test-filter }}"

    # Note that uploading the failure dumps would fail under Windows if the path were too long, regardless of
    # LongPathsEnabled, see: https://github.com/actions/upload-artifact/issues/309. To get around that we merge all
    # FailureDumps into the solution root. The following two steps need to be success() || failure() (excluding the
    # workflow being cancelled), so if there's a failure dump it'll be uploaded even if the tests are ultimately passed
    # after retries.
    # The same is true for the next step as well.
    - name: Merge FailureDumps
      shell: pwsh
      if: success() || failure()
      run: Merge-FailureDumps -Directory "${{ inputs.build-directory }}"

    - name: Upload UI testing artifacts
      uses: actions/upload-artifact@v3.1.1
      # We don't need additional conditions, because of the "if-no-files-found" setting.
      if: success() || failure()
      with:
        name: ui-test-failure-dump-${{ steps.setup.outputs.friendly-build-directory-name }}-${{ steps.setup.outputs.runner-suffix }}
        path: ${{ inputs.build-directory }}/FailureDumps/
        if-no-files-found: ignore

    - name: Upload Temp folder
      uses: actions/upload-artifact@v3.1.1
      if: success() || failure()
      with:
        name: ui-test-temp-folder-${{ steps.setup.outputs.friendly-build-directory-name }}-${{ steps.setup.outputs.runner-suffix }}
        path: ${{ inputs.build-directory }}/Temp/

    - name: Test Report
      # v10
      uses: phoenix-actions/test-reporting@93ce19fa5882ebe3969ebdb9ee1024b3d29e776f
      if: success() || failure()
      with:
        name: Test Results (${{inputs.build-directory}}|${{ steps.setup.outputs.runner-suffix }}
        path: '${{inputs.build-directory}}/**/*.trx'
        reporter: dotnet-trx
        fail-on-error: 'false'
        output-to: 'step-summary'
